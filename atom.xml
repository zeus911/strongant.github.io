<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>strongant的个人博客</title>
  <subtitle>一个正在成长的码农</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://baiwenhui.com/"/>
  <updated>2017-02-09T09:52:38.037Z</updated>
  <id>http://baiwenhui.com/</id>
  
  <author>
    <name>strongant</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>白文辉-应聘Java开发工程师</title>
    <link href="http://baiwenhui.com/2017/02/09/%E7%99%BD%E6%96%87%E8%BE%89-%E5%BA%94%E8%81%98Java%E5%BC%80%E5%8F%91%E5%B7%A5%E7%A8%8B%E5%B8%88/"/>
    <id>http://baiwenhui.com/2017/02/09/白文辉-应聘Java开发工程师/</id>
    <published>2017-02-09T09:28:26.000Z</published>
    <updated>2017-02-09T09:52:38.037Z</updated>
    
    <content type="html"><![CDATA[<h1 id="联系方式"><a href="#联系方式" class="headerlink" title="联系方式"></a>联系方式</h1><ul>
<li>手机：18215361994</li>
<li><ul>
<li>Email：strongant1994@gmail.com</li>
</ul>
</li>
<li><ul>
<li>QQ/微信号：877798942/18215361994<br>-</li>
</ul>
</li>
</ul>
<hr>
<p>-</p>
<ul>
<li><h1 id="个人信息"><a href="#个人信息" class="headerlink" title="个人信息"></a>个人信息</h1>-</li>
<li><ul>
<li>白文辉/男/1994 </li>
</ul>
</li>
<li><ul>
<li>专科/兰州大学网络教育计算机技术与应用 </li>
</ul>
</li>
<li><ul>
<li>工作年限：2年半</li>
</ul>
</li>
<li><ul>
<li>技术博客：strongant.github.io</li>
</ul>
</li>
<li><ul>
<li>Github：<a href="https://github.com/strongant" target="_blank" rel="external">https://github.com/strongant</a><br>-</li>
</ul>
</li>
<li><ul>
<li>期望职位：Java程序员</li>
</ul>
</li>
<li><ul>
<li>期望薪资：税后月薪14k~18k</li>
</ul>
</li>
<li><ul>
<li>期望城市：上海<br>-</li>
</ul>
</li>
</ul>
<hr>
<p>-</p>
<ul>
<li><h1 id="工作经历"><a href="#工作经历" class="headerlink" title="工作经历"></a>工作经历</h1>-<br>-</li>
<li><h2 id="上海浦东软件园信息技术股份有限公司-（-2015年6月-2017年2月-）"><a href="#上海浦东软件园信息技术股份有限公司-（-2015年6月-2017年2月-）" class="headerlink" title="上海浦东软件园信息技术股份有限公司 （ 2015年6月 ~ 2017年2月 ）"></a>上海浦东软件园信息技术股份有限公司 （ 2015年6月 ~ 2017年2月 ）</h2>-<br>-</li>
<li><h3 id="一起吐槽吧Chrome扩展"><a href="#一起吐槽吧Chrome扩展" class="headerlink" title="一起吐槽吧Chrome扩展"></a>一起吐槽吧Chrome扩展</h3></li>
<li>我在此项目主要负责谷歌chrome扩展的开发、Landing页面的展示、通过微信扫码上传图片的功能，该扩展主要的作用是提供一个为网上购物用户的吐槽发泄第三方平台。分别在采集网页信息和截图以及页面录像方面做得比较出色，这个项目中，我最困难的问题是对chrome浏览器打开的tab页进行录像功能的实现，我刚开始拿到这个需求的时候不知道如何下手，通过寻找相关的开源项目和参考谷歌chrome浏览器扩展开发手册，一步一步自己摸索完成了此功能，最后用户可以点击按钮对标签页进行录像。这个项目中，我最自豪的技术细节是学会并掌握了使用Node+Angular等前端相关技术栈对扩展的开发，通过自己的努力在2016年末完成了计划的原型版本，领导对此工作比较赞赏。</li>
<li>项目Landing页介绍：<a href="http://www.17tc8.com/" target="_blank" rel="external">http://www.17tc8.com/</a></li>
<li>chrome扩展商店内测版本下载地址:<a href="https://chrome.google.com/webstore/detail/17tc8/oednfimipmoahpmmhglgaepjanilbnhi" target="_blank" rel="external">https://chrome.google.com/webstore/detail/17tc8/oednfimipmoahpmmhglgaepjanilbnhi</a><br>-<br>-<br>-</li>
<li><h3 id="浦软翔鹰电子数据取证软件"><a href="#浦软翔鹰电子数据取证软件" class="headerlink" title="浦软翔鹰电子数据取证软件"></a>浦软翔鹰电子数据取证软件</h3></li>
<li>我在此项目负责了案件分析(线索、过滤、邮件分析)、U盘管理、案件管理模块的开发，分别在案件搜索部分做得出色，主要完成了对采集的信息进行全文检索和匹配，关键词高亮显示，并对搜索的结果进行分组，这个项目中，我最困难的问题是对于Elasticsearch了解不是很深入，在进行全文搜索匹配的过程中，由于滥用搜索关键词，导致查询速度慢，用户等待时间长，我采取了使用正确的方式对个别字段的检索，最后改善了查询慢、用户等待搜索结果时间长的问题。这个项目中，我最自豪的技术细节是学习了开源的全文搜索技术-Elasticsearch，了解了全文搜索方面的相关知识，它可以帮助我在以后做类似的项目中有充分的把握，通过不断对按键搜索的优化，同事对我的解决问题的能力也比较认可，领导也很满意。<br>-<br>-</li>
<li><h3 id="上海市工商亮照巡检平台"><a href="#上海市工商亮照巡检平台" class="headerlink" title="上海市工商亮照巡检平台"></a>上海市工商亮照巡检平台</h3></li>
<li>我在此项目属于独立开发，该项目主要完成的功能是由上海市工商局提供批量的网站域名，检测网站首页是否包含工商亮照标识，通过爬虫进行检测并将部分信息进行整理入库，我分别在数据抓取和数据处理方面做得比较出色，通过此项目的开发，让我对Python技术栈有了深入的了解和应用，这个项目中，我最困难的问题是数据的抓取部分，由于目前大多数网站都使用了ajax技术，导致传统的抓取不能获取到网站渲染后的完整信息，我参考公司之前使用的Phantomjs技术进行了抓取网站信息，最后解决了大部分网站信息不能完整抓取的问题。这个项目中，我最自豪的技术细节是能够使用无头的js浏览器引擎-Phantomjs爬取网站的完整信息，对爬虫方面的知识有了更深一步的认知，通过此项目的开发，解决了之前抓取信息不完整的信息，获得了领导的认可，提升了自己的技术广度。<br>-<br>-</li>
<li><h3 id="其他项目"><a href="#其他项目" class="headerlink" title="其他项目"></a>其他项目</h3>-</li>
<li>Linux/Unix系统下硬盘克隆桌面系统，使用技术栈Node+Electron+Angular+Gulp技术栈。</li>
<li>此项目地址:<a href="https://github.com/strongant/diskclone" target="_blank" rel="external">https://github.com/strongant/diskclone</a><br>-</li>
<li></li>
<li><h2 id="兰州中林智能科技有限公司-（-2014年10月-2015年6月-）"><a href="#兰州中林智能科技有限公司-（-2014年10月-2015年6月-）" class="headerlink" title="兰州中林智能科技有限公司 （ 2014年10月 ~ 2015年6月 ）"></a>兰州中林智能科技有限公司 （ 2014年10月 ~ 2015年6月 ）</h2>-</li>
<li><h3 id="甘肃省兰州市交警支队短信告知系统"><a href="#甘肃省兰州市交警支队短信告知系统" class="headerlink" title="甘肃省兰州市交警支队短信告知系统"></a>甘肃省兰州市交警支队短信告知系统</h3></li>
<li>我在此项目主要负责前后端的开发，分别在短信群发方面做得比较好，这个项目中，我最困难的问题是由于使用了第三方短信下发平台的接口，某些短信由于信号或者关机的原因不能及时送达违法信息到达驾驶人的手机中，我采取了最多3次的补发重试机制和校验核对，确保短信能尽可能的下发到驾驶人员的手机短信中，最后通过我的这个方案，可以解决大多数由于第三方短信下发平台的接口不稳定和信号差原因不能发送短信成功的问题。这个项目中，我最自豪的技术细节是使用了Java中的webservice对驾驶员下发违法告知短信，之前没有做过类似的需求，通过对项目的完善和优化，短信的发送的成功率得到了保障，收到了领导的奖励和认可。<br>-<br>-</li>
<li><h3 id="甘肃、青海触摸屏查询系统"><a href="#甘肃、青海触摸屏查询系统" class="headerlink" title="甘肃、青海触摸屏查询系统"></a>甘肃、青海触摸屏查询系统</h3></li>
<li>我在此项目主要负责前后端的开发，分别在处理违法信息的展示和处理第三方项目数据方面做得比较好，这个项目中，我最困难的问题是对老系统的Flash进行改造，我采取了废弃Flash展示信息的方式，采用HTML方式进行展现，将很多老项目中不用的东西进行了替代，最后项目比之前的老系统更轻和使用了较新的技术。这个项目中，我最自豪的技术是使用了Spring、SpringMVC、Mybatis、jQuery、EasyUI独立完成了前后端的功能，将之前项目使用的Struts1和Struts2技术进行了替换，使用了新的技术，提高了自己的做事能力，对公司使用的技术栈进行了建议。领导对我的表现比较满意和看重！<br>-<br>-</li>
<li><h3 id="其他项目-1"><a href="#其他项目-1" class="headerlink" title="其他项目"></a>其他项目</h3>-</li>
<li>由于这家公司主要接触的是甘肃交通和车管所相关的项目，期间对一些老系统进行了维护和升级！<br>-</li>
</ul>
<hr>
<p>-</p>
<ul>
<li><h1 id="开源项目和作品"><a href="#开源项目和作品" class="headerlink" title="开源项目和作品"></a>开源项目和作品</h1>-</li>
<li><h2 id="开源项目"><a href="#开源项目" class="headerlink" title="开源项目"></a>开源项目</h2></li>
<li><ul>
<li><a href="https://github.com/strongant/diskclone" target="_blank" rel="external">桌面硬盘克隆工具</a>：主要用于读取指定Linux系统下的某个盘，对整个磁盘文件进行拷贝工作<br>-</li>
</ul>
</li>
</ul>
<hr>
<p>-</p>
<ul>
<li><h2 id="技术文章"><a href="#技术文章" class="headerlink" title="技术文章"></a>技术文章</h2>-</li>
<li><ul>
<li><a href="https://github.com/strongant/rxjs/blob/i18n/zh-CN/installation.md" target="_blank" rel="external">rxjs安装</a></li>
</ul>
</li>
<li><ul>
<li><a href="https://github.com/strongant/rxjs/blob/i18n/zh-CN/observer.md" target="_blank" rel="external">rxjs观察者</a></li>
</ul>
</li>
<li><ul>
<li><a href="https://github.com/strongant/rxjs/blob/i18n/zh-CN/subscription.md" target="_blank" rel="external">rxjs订阅</a><br>-</li>
</ul>
</li>
</ul>
<hr>
<p>-</p>
<ul>
<li><h1 id="技能清单"><a href="#技能清单" class="headerlink" title="技能清单"></a>技能清单</h1></li>
<li>以下均为我熟练使用的技能<br>-</li>
<li><ul>
<li>Web开发：Java/Python/Node/JS</li>
</ul>
</li>
<li><ul>
<li>Web框架：Spring/SpringMVC/MyBatis/Struts2/Hibernate/Flask</li>
</ul>
</li>
<li><ul>
<li>前端框架：Bootstrap/AngularJS/HTML5/Materialize/Electron/EasyUI</li>
</ul>
</li>
<li><ul>
<li>前端工具：Bower/Gulp/Grunt</li>
</ul>
</li>
<li><ul>
<li>数据库相关：MySQL/PgSQL/SQLite/Oracle</li>
</ul>
</li>
<li><ul>
<li>版本管理、文档和自动化部署工具：Svn/Git</li>
</ul>
</li>
<li><ul>
<li>单元测试：Junit/mocha/jasmine</li>
</ul>
</li>
<li><ul>
<li>云和开放平台：中国电信OOS</li>
</ul>
</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;联系方式&quot;&gt;&lt;a href=&quot;#联系方式&quot; class=&quot;headerlink&quot; title=&quot;联系方式&quot;&gt;&lt;/a&gt;联系方式&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;手机：18215361994&lt;/li&gt;
&lt;li&gt;&lt;ul&gt;
&lt;li&gt;Email：strongant1994@gma
    
    </summary>
    
    
      <category term="简历" scheme="http://baiwenhui.com/tags/%E7%AE%80%E5%8E%86/"/>
    
  </entry>
  
  <entry>
    <title>2017开工快乐</title>
    <link href="http://baiwenhui.com/2017/02/05/2017%E5%BC%80%E5%B7%A5%E5%BF%AB%E4%B9%90/"/>
    <id>http://baiwenhui.com/2017/02/05/2017开工快乐/</id>
    <published>2017-02-05T13:43:05.000Z</published>
    <updated>2017-02-09T09:52:38.037Z</updated>
    
    <content type="html"><![CDATA[<center><img src="http://i1.piimg.com/4851/ce0a3e1ef63844b1.jpg" alt="2017开工快乐"></center>

<p>春节已经结束了，祝愿大家在新的一年多挣钱！在这里给大家分享一份简历模板：<br><a href="http://resume.f-tm.net/" target="_blank" rel="external">http://resume.f-tm.net/</a></p>
<p>简历开源地址:<br><a href="https://github.com/googlerobot/resume" target="_blank" rel="external">https://github.com/googlerobot/resume</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;center&gt;&lt;img src=&quot;http://i1.piimg.com/4851/ce0a3e1ef63844b1.jpg&quot; alt=&quot;2017开工快乐&quot;&gt;&lt;/center&gt;

&lt;p&gt;春节已经结束了，祝愿大家在新的一年多挣钱！在这里给大家分享一份简历模板：&lt;br&gt;&lt;a hre
    
    </summary>
    
    
      <category term="随笔" scheme="http://baiwenhui.com/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>春节回家</title>
    <link href="http://baiwenhui.com/2017/01/23/%E6%98%A5%E8%8A%82%E5%9B%9E%E5%AE%B6/"/>
    <id>http://baiwenhui.com/2017/01/23/春节回家/</id>
    <published>2017-01-23T13:20:53.000Z</published>
    <updated>2017-02-09T09:52:38.037Z</updated>
    
    <content type="html"><![CDATA[<center><img src="http://i1.piimg.com/4851/b70e6f5b8f4e2ba5.jpg" alt="plane"></center>


<p><strong>对于刚过去不远的2016年，有欢乐，有辛酸，有失望，有快乐！还记得自己2016年年初的时候计划通过自己的努力买一台MakBook Pro（非正式工资的钱买），可到头来并没有完成我的这个愿望！</strong></p>
<p><strong>远在他乡的我，随着年龄的增长，感到些许压抑、彷徨和不安，在新的2017年我决定奋力冲刺，早日实现自己的梦想！</strong></p>
<p><strong>远在他乡，来到陌生的城市，看着天天上涨的房价，买房这件事情也只能想想。自己长大了，父母却老了，他们需要我们的照顾，在一线城市上几年班，攒个首付去二三线城市买一套房子然后打拼事业，这也是我的打算！乘着二三线城市的房价还没有大幅上涨，还是早下手为强！</strong></p>
<p><strong>在一线城市上班，别人听起来工资很高，经常听到隔壁阿姨说：谁谁家的儿子在哪哪呢，一个月挣1W多呢，可是花销完，房租缴完，也剩不下多少钱了。要想拿到更多的薪水，就得从自身开始做起。我已经为自己制定好了2017年的计划，你呢？</strong></p>
<p><strong>在这里，提前祝大家新年快乐！以上是我的一点生活感触，博客地址：<a href="http://baiwenhui.com">http://baiwenhui.com</a>，欢迎交流、分享：</strong></p>
<center> <img src="http://i1.piimg.com/4851/71f2c239602d5025.jpg" alt="qrcode"></center>]]></content>
    
    <summary type="html">
    
      &lt;center&gt;&lt;img src=&quot;http://i1.piimg.com/4851/b70e6f5b8f4e2ba5.jpg&quot; alt=&quot;plane&quot;&gt;&lt;/center&gt;


&lt;p&gt;&lt;strong&gt;对于刚过去不远的2016年，有欢乐，有辛酸，有失望，有快乐！还记得自己2016年
    
    </summary>
    
    
      <category term="生活感悟" scheme="http://baiwenhui.com/tags/%E7%94%9F%E6%B4%BB%E6%84%9F%E6%82%9F/"/>
    
  </entry>
  
  <entry>
    <title>rxjs翻译-rxjs介绍</title>
    <link href="http://baiwenhui.com/2017/01/22/rxjs%E7%BF%BB%E8%AF%91-rxjs%E4%BB%8B%E7%BB%8D/"/>
    <id>http://baiwenhui.com/2017/01/22/rxjs翻译-rxjs介绍/</id>
    <published>2017-01-22T13:26:40.000Z</published>
    <updated>2017-02-09T09:52:38.037Z</updated>
    
    <content type="html"><![CDATA[<h1 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h1><p>RxJS是一个基于可观察对象(Observable)序列，用于异步或者事件编程的库。它提供一个核心类型，<a href="&#39;./overview.html#observable&#39;">Observable</a> ，几个卫星类型（Observer, Schedulers, Subjects）以及一些由<a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/New_in_JavaScript/1.6" target="_blank" rel="external">Array#extras</a> (map, filter, reduce, every等)激发的，让异步事件可以以集合的方式被处理的运算子(Operators)。</p>
<p><span class="informal">可以将RxJS想象成是用于处理事件的Lodash.</span></p>
<p>ReactiveX将<a href="https://en.wikipedia.org/wiki/Observer_pattern" target="_blank" rel="external">Observer模式</a>和<a href="https://en.wikipedia.org/wiki/Iterator_pattern" target="_blank" rel="external">Iterator模式</a>和对集合进行函数式编程结合起来，从而满足了对事件序列进行管理的需求。</p>
<p>RxJS用于解决异步事件的管理问题，它的核心概念如下：</p>
<ul>
<li><strong>Observable:</strong> 代表数据与事件的集合，这个集合可以被调用，从而可以生成数据和事件。</li>
<li><strong>Observer:</strong> 回调函数的集合，用于获取想要数据。这些数据来自于Observable。</li>
<li><strong>Subscription:</strong> 用于表示Observable的执行状态，主要用于执行的取消。</li>
<li><strong>Operator:</strong> 函数式风格的纯函数，通过<code>map</code>, <code>filter</code>, <code>concat</code>, <code>flatMap</code>等操作对集合进行处理。</li>
<li><strong>Subject:</strong> 与EventEmitter等价，唯一可以将一个值或者事件向个多个Observer进行广播的办法。</li>
<li><strong>Schedulers:</strong> 一个中心化的、控制并发的分发器，允许我们可以在象<code>setTimeout</code>、<code>requestAnimationFrame</code>或者其它类似的计算中可以进行调整。</li>
</ul>
<h2 id="第一个例子"><a href="#第一个例子" class="headerlink" title="第一个例子"></a>第一个例子</h2><p>通常你是这样注册事件的侦听器(listener)的。<br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> button = <span class="built_in">document</span>.querySelector(<span class="string">'button'</span>);</div><div class="line">button.addEventListener(<span class="string">'click'</span>, () =&gt; <span class="built_in">console</span>.log(<span class="string">'Clicked!'</span>));</div></pre></td></tr></table></figure></p>
<p>使用RxJS的话，你要创建一个Observable来替换。</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> button = <span class="built_in">document</span>.querySelector(<span class="string">'button'</span>);</div><div class="line">Rx.Observable.fromEvent(button, <span class="string">'click'</span>)</div><div class="line">  .subscribe(<span class="function"><span class="params">()</span> =&gt;</span> <span class="built_in">console</span>.log(<span class="string">'Clicked!'</span>));</div></pre></td></tr></table></figure>
<h3 id="纯粹-Purity"><a href="#纯粹-Purity" class="headerlink" title="纯粹(Purity)"></a>纯粹(Purity)</h3><p>让RxJS强大的是它能完全通过函数来生成数值，这也就意味着可以减少代码出错的机会。</p>
<p>通常你会创建比较不纯粹的函数，在这样的函数里，其它的代码片段会让你的状态变的混乱。</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> count = <span class="number">0</span>;</div><div class="line"><span class="keyword">var</span> button = <span class="built_in">document</span>.querySelector(<span class="string">'button'</span>);</div><div class="line">button.addEventListener(<span class="string">'click'</span>, () =&gt; <span class="built_in">console</span>.log(<span class="string">`Clicked <span class="subst">$&#123;++count&#125;</span> times`</span>));</div></pre></td></tr></table></figure>
<p>而使用RxJS可以将你的状态进行隔离。</p>
<blockquote>
<p>译者注： 指count不再需要定义在外面。</p>
</blockquote>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> button = <span class="built_in">document</span>.querySelector(<span class="string">'button'</span>);</div><div class="line">Rx.Observable.fromEvent(button, <span class="string">'click'</span>)</div><div class="line">  .scan(<span class="function"><span class="params">count</span> =&gt;</span> count + <span class="number">1</span>, <span class="number">0</span>)</div><div class="line">  .subscribe(<span class="function"><span class="params">count</span> =&gt;</span> <span class="built_in">console</span>.log(<span class="string">`Clicked <span class="subst">$&#123;count&#125;</span> times`</span>));</div></pre></td></tr></table></figure>
<p>这里<strong>scan</strong>运算子的工作方式与<strong>reduce</strong>在数组里的工作方式是一样的。它从传给回调函数的值中获取值。返回的值将会作为下一次的传入值。</p>
<blockquote>
<p>译者注：scan第二个参数0是初始值。对于上面的函数来说就可以用来侦听被点击的次数了，非常的方便。</p>
</blockquote>
<h3 id="流转（Flow）"><a href="#流转（Flow）" class="headerlink" title="流转（Flow）"></a>流转（Flow）</h3><p>RxJS有一堆的运算子可以帮助你控制事件如何在你的可观察对象里流转。</p>
<p>下面是你在纯JavaScript下允许一分钟最多一次点击的代码：</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> count = <span class="number">0</span>;</div><div class="line"><span class="keyword">var</span> rate = <span class="number">1000</span>;</div><div class="line"><span class="keyword">var</span> lastClick = <span class="built_in">Date</span>.now() - rate;</div><div class="line"><span class="keyword">var</span> button = <span class="built_in">document</span>.querySelector(<span class="string">'button'</span>);</div><div class="line">button.addEventListener(<span class="string">'click'</span>, () =&gt; &#123;</div><div class="line">  <span class="keyword">if</span> (<span class="built_in">Date</span>.now() - lastClick &gt;= rate) &#123;</div><div class="line">    <span class="built_in">console</span>.log(<span class="string">`Clicked <span class="subst">$&#123;++count&#125;</span> times`</span>);</div><div class="line">    lastClick = <span class="built_in">Date</span>.now();</div><div class="line">  &#125;</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<p>使用RxJS后:</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> button = <span class="built_in">document</span>.querySelector(<span class="string">'button'</span>);</div><div class="line">Rx.Observable.fromEvent(button, <span class="string">'click'</span>)</div><div class="line">  .throttleTime(<span class="number">1000</span>)</div><div class="line">  .scan(<span class="function"><span class="params">count</span> =&gt;</span> count + <span class="number">1</span>, <span class="number">0</span>)</div><div class="line">  .subscribe(<span class="function"><span class="params">count</span> =&gt;</span> <span class="built_in">console</span>.log(<span class="string">`Clicked <span class="subst">$&#123;count&#125;</span> times`</span>));</div></pre></td></tr></table></figure>
<p>其实的流转控制运算子还有<a href="../class/es6/Observable.js~Observable.html#instance-method-filter"><strong>filter</strong></a>, <a href="../class/es6/Observable.js~Observable.html#instance-method-delay"><strong>delay</strong></a>, <a href="../class/es6/Observable.js~Observable.html#instance-method-debounceTime"><strong>debounceTime</strong></a>, <a href="../class/es6/Observable.js~Observable.html#instance-method-take"><strong>take</strong></a>, <a href="../class/es6/Observable.js~Observable.html#instance-method-takeUntil"><strong>takeUntil</strong></a>, <a href="../class/es6/Observable.js~Observable.html#instance-method-distinct"><strong>distinct</strong></a>, <a href="../class/es6/Observable.js~Observable.html#instance-method-distinctUntilChanged"><strong>distinctUntilChanged</strong></a>等。</p>
<h3 id="值-Values"><a href="#值-Values" class="headerlink" title="值(Values)"></a>值(Values)</h3><p>你可以转化赋给你的观察者的值。</p>
<p>下面是你在纯JavaScript下添加当前鼠标的每个点击事件的x轴位置的代码：</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> count = <span class="number">0</span>;</div><div class="line"><span class="keyword">var</span> rate = <span class="number">1000</span>;</div><div class="line"><span class="keyword">var</span> lastClick = <span class="built_in">Date</span>.now() - rate;</div><div class="line"><span class="keyword">var</span> button = <span class="built_in">document</span>.querySelector(<span class="string">'button'</span>);</div><div class="line">button.addEventListener(<span class="string">'click'</span>, (event) =&gt; &#123;</div><div class="line">  <span class="keyword">if</span> (<span class="built_in">Date</span>.now() - lastClick &gt;= rate) &#123;</div><div class="line">    count += event.clientX;</div><div class="line">    <span class="built_in">console</span>.log(count)</div><div class="line">    lastClick = <span class="built_in">Date</span>.now();</div><div class="line">  &#125;</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<p>使用RxJS后:</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> button = <span class="built_in">document</span>.querySelector(<span class="string">'button'</span>);</div><div class="line">Rx.Observable.fromEvent(button, <span class="string">'click'</span>)</div><div class="line">  .throttleTime(<span class="number">1000</span>)</div><div class="line">  .map(<span class="function"><span class="params">event</span> =&gt;</span> event.clientX)</div><div class="line">  .scan(<span class="function">(<span class="params">count, clientX</span>) =&gt;</span> count + clientX, <span class="number">0</span>)</div><div class="line">  .subscribe(<span class="function"><span class="params">count</span> =&gt;</span> <span class="built_in">console</span>.log(count));</div></pre></td></tr></table></figure>
<p>另外几个用于生成值的运算子有<a href="../class/es6/Observable.js~Observable.html#instance-method-pluck"><strong>pluck</strong></a>, <a href="../class/es6/Observable.js~Observable.html#instance-method-pairwise"><strong>pairwise</strong></a>,<br><a href="../class/es6/Observable.js~Observable.html#instance-method-sample"><strong>sample</strong></a>等。</p>
<blockquote>
<p>译者注：这里map可以将事件里的值取出来，如果不进行map，clientX里的值就是事件本身。<br>这里要注意的是每次变换，其实对象是发生变化的。subscribe一次之后就不能再subscribe了。</p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;/h1&gt;&lt;p&gt;RxJS是一个基于可观察对象(Observable)序列，用于异步或者事件编程的库。它提供一个核心类型，&lt;a href=&quot;&amp;#39;./ov
    
    </summary>
    
    
      <category term="rxjs" scheme="http://baiwenhui.com/tags/rxjs/"/>
    
  </entry>
  
  <entry>
    <title>《放弃F5，拥抱browser-sync》公众号文章错误说明</title>
    <link href="http://baiwenhui.com/2017/01/21/%E5%A6%82%E4%BD%95%E5%9C%A8%E6%8A%80%E6%9C%AF%E4%B8%8A%E7%B2%BE%E8%BF%9B/"/>
    <id>http://baiwenhui.com/2017/01/21/如何在技术上精进/</id>
    <published>2017-01-21T14:30:29.000Z</published>
    <updated>2017-02-09T09:52:38.037Z</updated>
    
    <content type="html"><![CDATA[<p>首先说说声对不起，在上一篇的公众号文章：《放弃F5，拥抱browser-sync》中存在几个错误点。链接地址:<br><a href="http://mp.weixin.qq.com/s?__biz=MzAxMDgyOTgwOQ==&amp;tempkey=4s4RIGPKLlSI%2B%2B8VH3wx8KIrdHvnQSOEPLJ0k8joKaEA72cqJ41X6s0s0IzuDdKlkgLNIIrz1xkrL7lYcnIjCxGh6G%2BTC55MKR%2FWqW%2FbglQTt0aCB0A%2FFg4qN5SA%2B175n%2BIZz9ly%2BsRC5o4zHaD2Og%3D%3D&amp;chksm=1b4b2ba22c3ca2b41c5ffa577f24f378a13bd46665cd09a844d0b88bf733666a1900900694a8#rd" target="_blank" rel="external">http://mp.weixin.qq.com/s?__biz=MzAxMDgyOTgwOQ==&amp;tempkey=4s4RIGPKLlSI%2B%2B8VH3wx8KIrdHvnQSOEPLJ0k8joKaEA72cqJ41X6s0s0IzuDdKlkgLNIIrz1xkrL7lYcnIjCxGh6G%2BTC55MKR%2FWqW%2FbglQTt0aCB0A%2FFg4qN5SA%2B175n%2BIZz9ly%2BsRC5o4zHaD2Og%3D%3D&amp;chksm=1b4b2ba22c3ca2b41c5ffa577f24f378a13bd46665cd09a844d0b88bf733666a1900900694a8#rd</a>，<br>几个错误点修改如下：</p>
<ol>
<li>文章中的：<br><em>……更重要的是 Browsersync可以同时在PC、平板、手机等设备下进项调试…</em><br>将“进项调试”修改为“进行调试”<br>2.　最后的代码有一个目录错误，因为我的粗心，给大家带来的不变，请见谅！在以后的文章中我会更加小心<br>发表文章，力求保证没有错误！<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line">var gulp        = require(&apos;gulp&apos;);</div><div class="line">var browserSync = require(&apos;browser-sync&apos;).create();</div><div class="line">var browserify = require(&apos;gulp-browserify&apos;);</div><div class="line">var sass        = require(&apos;gulp-sass&apos;);</div><div class="line">var uglify = require(&apos;gulp-uglify&apos;);</div><div class="line">// Compile sass into CSS &amp; auto-inject into browsers</div><div class="line">gulp.task(&apos;sass&apos;, function() &#123;</div><div class="line">    return gulp.src(&quot;app/scss/*.scss&quot;)</div><div class="line">        .pipe(sass())</div><div class="line">        .pipe(gulp.dest(&quot;dist/css&quot;))</div><div class="line">        .pipe(browserSync.stream());</div><div class="line">&#125;);</div><div class="line">// process JS files and return the stream.</div><div class="line">gulp.task(&apos;js&apos;, function () &#123;</div><div class="line">    return gulp.src(&apos;app/js/*.js&apos;)</div><div class="line">        .pipe(browserify())</div><div class="line">        .pipe(uglify())</div><div class="line">        .pipe(gulp.dest(&apos;dist/js&apos;));</div><div class="line">&#125;);</div><div class="line">// Static Server + watching scss/js/html files</div><div class="line">gulp.task(&apos;serve&apos;, [&apos;sass&apos;,&apos;js&apos;], function() &#123;</div><div class="line">    browserSync.init(&#123;</div><div class="line">        server: &quot;./app&quot;</div><div class="line">    &#125;);</div><div class="line">    gulp.watch(&quot;app/scss/*.scss&quot;, [&apos;sass&apos;]);</div><div class="line">        gulp.watch(&quot;app/js/*.js&quot;, [&apos;js&apos;]);</div><div class="line">    gulp.watch(&quot;app/*.html&quot;).on(&apos;change&apos;, browserSync.reload);</div><div class="line">&#125;);</div><div class="line">gulp.task(&apos;default&apos;, [&apos;serve&apos;]);</div></pre></td></tr></table></figure>
</li>
</ol>
<p>修改为：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line">var gulp        = require(&apos;gulp&apos;);</div><div class="line">var browserSync = require(&apos;browser-sync&apos;).create();</div><div class="line">var browserify = require(&apos;gulp-browserify&apos;);</div><div class="line">var sass        = require(&apos;gulp-sass&apos;);</div><div class="line">var uglify = require(&apos;gulp-uglify&apos;);</div><div class="line">// Compile sass into CSS &amp; auto-inject into browsers</div><div class="line">gulp.task(&apos;sass&apos;, function() &#123;</div><div class="line">    return gulp.src(&quot;app/scss/*.scss&quot;)</div><div class="line">        .pipe(sass())</div><div class="line">        .pipe(gulp.dest(&quot;.app/dist/css&quot;))</div><div class="line">        .pipe(browserSync.stream());</div><div class="line">&#125;);</div><div class="line">// process JS files and return the stream.</div><div class="line">gulp.task(&apos;js&apos;, function () &#123;</div><div class="line">    return gulp.src(&apos;app/js/*.js&apos;)</div><div class="line">        .pipe(browserify())</div><div class="line">        .pipe(uglify())</div><div class="line">        .pipe(gulp.dest(&apos;.app/dist/js&apos;));</div><div class="line">&#125;);</div><div class="line">// Static Server + watching scss/js/html files</div><div class="line">gulp.task(&apos;serve&apos;, [&apos;sass&apos;,&apos;js&apos;], function() &#123;</div><div class="line">    browserSync.init(&#123;</div><div class="line">        server: &quot;./app&quot;</div><div class="line">    &#125;);</div><div class="line">    gulp.watch(&quot;app/scss/*.scss&quot;, [&apos;sass&apos;]);</div><div class="line">        gulp.watch(&quot;app/js/*.js&quot;, [&apos;js&apos;]);</div><div class="line">    gulp.watch(&quot;app/*.html&quot;).on(&apos;change&apos;, browserSync.reload);</div><div class="line">&#125;);</div><div class="line">gulp.task(&apos;default&apos;, [&apos;serve&apos;]);</div></pre></td></tr></table></figure></p>
<p>参照对比原文地址：<br><a href="http://mp.weixin.qq.com/s?__biz=MzAxMDgyOTgwOQ==&amp;tempkey=4s4RIGPKLlSI%2B%2B8VH3wx8KIrdHvnQSOEPLJ0k8joKaEA72cqJ41X6s0s0IzuDdKlkgLNIIrz1xkrL7lYcnIjCxGh6G%2BTC55MKR%2FWqW%2FbglQTt0aCB0A%2FFg4qN5SA%2B175n%2BIZz9ly%2BsRC5o4zHaD2Og%3D%3D&amp;chksm=1b4b2ba22c3ca2b41c5ffa577f24f378a13bd46665cd09a844d0b88bf733666a1900900694a8#rd" target="_blank" rel="external">http://mp.weixin.qq.com/s?__biz=MzAxMDgyOTgwOQ==&amp;tempkey=4s4RIGPKLlSI%2B%2B8VH3wx8KIrdHvnQSOEPLJ0k8joKaEA72cqJ41X6s0s0IzuDdKlkgLNIIrz1xkrL7lYcnIjCxGh6G%2BTC55MKR%2FWqW%2FbglQTt0aCB0A%2FFg4qN5SA%2B175n%2BIZz9ly%2BsRC5o4zHaD2Og%3D%3D&amp;chksm=1b4b2ba22c3ca2b41c5ffa577f24f378a13bd46665cd09a844d0b88bf733666a1900900694a8#rd</a></p>
<p>目前内容已经修改！欢迎反馈，欢迎交流：<br><img src="http://mmbiz.qpic.cn/mmbiz_png/bLPd4tHRLu6MfYBKkZ6Rkk5E2H92YaZN1JO92ub5SEVFEPxCHY8PCRHTLUHXiaghl4p7hRnxT8yySSdl7ZV7epA/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1" alt="个人公众号"></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;首先说说声对不起，在上一篇的公众号文章：《放弃F5，拥抱browser-sync》中存在几个错误点。链接地址:&lt;br&gt;&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzAxMDgyOTgwOQ==&amp;amp;tempkey=4s4RIGPK
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>hexo搭建成功</title>
    <link href="http://baiwenhui.com/2017/01/19/hexo%E6%90%AD%E5%BB%BA%E6%88%90%E5%8A%9F/"/>
    <id>http://baiwenhui.com/2017/01/19/hexo搭建成功/</id>
    <published>2017-01-19T15:20:52.000Z</published>
    <updated>2017-02-09T09:52:38.037Z</updated>
    
    <content type="html"><![CDATA[<p>终于折腾完了，搭建好我的hexo，的确挺方便的！感谢前人的贡献！</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;终于折腾完了，搭建好我的hexo，的确挺方便的！感谢前人的贡献！&lt;/p&gt;

    
    </summary>
    
    
  </entry>
  
</feed>
